---
- name: create prometheus system group
  become: true
  group:
    name: "{{ prometheus_user_group }}"
    state: present

- name: create prometheus system user
  become: true
  user:
    name: "{{ prometheus_user_name }}"
    group: "{{ prometheus_user_group }}"
    system: true
    shell: "/sbin/nologin"
    comment: "prometheus nologin user"
    createhome: false
    state: present

- name: download prometheus binary to local folder
  become: false
  get_url:
    url: "https://github.com/prometheus/prometheus/releases/download/v{{ prometheus_ver }}/prometheus-{{ prometheus_ver }}.linux-amd64.tar.gz"
    dest: "/tmp/prometheus/prometheus-{{ prometheus_ver }}.linux-amd64.tar.gz"
  register: _download_archive
  until: _download_archive is succeeded
  retries: 5
  delay: 2
  delegate_to: localhost
  check_mode: false

- name: unpack prometheus binaries
  become: false
  unarchive:
    src: "/tmp/prometheus-{{ prometheus_ver }}.linux-amd64.tar.gz"
    dest: "/tmp"
    creates: "/tmp/prometheus-{{ prometheus_ver }}.linux-amd64/prometheus"
  delegate_to: localhost
  check_mode: false

- name: propagate prometheus and promtool binaries
  copy:
    src: "/tmp/prometheus-{{ prometheus_ver }}.linux-amd64/{{ item }}"
    dest: "/usr/local/bin/{{ item }}"
    owner: "{{ prometheus_user_name }}"
    group: "{{ prometheus_user_group }}"
    mode: 0755
  with_items:
    - prometheus
    - promtool

- name: create prometheus data directory
  file:
    path: "{{ prometheus_dir }}"
    state: directory
    owner: "{{ prometheus_user_name }}"
    group: "{{ prometheus_user_group }}"
    mode: 0755

- name: create prometheus config directory
  file:
    path: "{{ prometheus_confdir }}"
    state: directory
    owner: "{{ prometheus_user_name }}"
    group: "{{ prometheus_user_group }}"
    mode: 0755

- name: propagate official console templates
  copy:
    src: "/tmp/prometheus-{{ prometheus_version }}.linux-amd64/{{ item }}/"
    dest: "{{ prometheus_confdir }}/{{ item }}/"
    mode: 0644
    owner: "{{ prometheus_user_name }}"
    group: "{{ prometheus_user_group }}"
  with_items:
    - console_libraries
    - consoles

- name: delete prometheus tmp folder and .tar.gz file
  file:
    path: "/tmp/prometheus"
    state: absent
  with_items:
    - /tmp/prometheus-{{ prometheus_ver }}.linux-amd64
    - /tmp/prometheus-{{ prometheus_ver }}.linux-amd64.tar.gz

- name: configure prometheus
  template:
    src: "{{ prometheus_conffile }}"
    dest: "{{ prometheus_confdir }}/prometheus.conf"

- name: alert config file
  copy:
    src: "files/alertrules.yml"
    dest: //etc/prometheus/alert.rules.yml

- name: create systemd service unit
  template:
    src: prometheus.service.j2
    dest: /etc/systemd/system/prometheus.service
  notify: reload_systemd

- name: start prometheus service
  service:
    name: "{{ serv_name }}"
    state: started
    enabled: yes

- name: check if prometheus is accessible
  uri:
    url: http://localhost:9090
    method: GET
    status_code: 200
